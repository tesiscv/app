{"version":3,"sources":["./src/app/experiencia/experiencia.component.ts","./src/app/experiencia/experiencia.component.html","./src/app/comentarios/comentarios.component.ts","./src/app/comentarios/comentarios.component.html","./src/assets/js/print2.js","./src/environments/environment.ts","./src/app/conocimientos/conocimientos.component.ts","./src/app/conocimientos/conocimientos.component.html","./src/app/estudios/estudios.component.ts","./src/app/estudios/estudios.component.html","./src/app/conocimiento-total/conocimiento-total.component.ts","./src/app/conocimiento-total/conocimiento-total.component.html","./src/assets/js/print.js","./src/app/formulario/formulario.component.ts","./src/app/formulario/formulario.component.html","./src/app/idiomas/idiomas.component.ts","./src/app/idiomas/idiomas.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/skills/skills.component.ts","./src/app/skills/skills.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/data-formulario.service.ts","./src/app/personal/personal.component.html","./src/app/personal/personal.component.ts","./src/app/app-routing.module.ts","./src/app/cursos/cursos.component.ts","./src/app/cursos/cursos.component.html","./src/app/language.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\nimport { PeriodicElement } from '../models/experiencias.interface';\nimport { Logro } from '../models/logro.interface';\nimport { Funcion } from '../models/funcion.interface';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n  selector: 'app-experiencia',\n  templateUrl: './experiencia.component.html',\n  styleUrls: ['./experiencia.component.scss']\n})\nexport class ExperienciaComponent implements OnInit {\n  dataSource = new MatTableDataSource<PeriodicElement>([]);\n  puesto: string = '';\n  empresa: string = '';\n  fechaInicio: Date | null = null;\n  fechaFin: Date | null = null;\n  actividades: string[] = [];\n  funciones: string[] = [];\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n  fechaActual: Date = new Date();\n  displayedColumns = ['empresa','puesto', 'fechaIni', 'fechaFin', 'actividades', 'funciones', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n   }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarExperiencia(): void {\n    if (this.puesto && this.empresa && this.fechaInicio && this.fechaFin && this.actividades.length !== 0 && this.funciones.length !== 0) {\n      const nuevaExperiencia: PeriodicElement = {\n        puesto: this.puesto,\n        empresa: this.empresa,\n        fechaIni: this.fechaInicio,\n        fechaFin: this.fechaFin,\n        actividades: this.actividades,\n        funciones: this.funciones\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      console.log('dataSource.data después de agregar:', this.dataSource.data);\n      this.dataFormularioService.guardarExperiencias(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  setFechaActual() {\n    this.fechaFin = this.fechaActual;\n  }\n\n  resetFormulario(): void {\n    this.puesto = '';\n    this.empresa = '';\n    this.fechaInicio = null;\n    this.fechaFin = null;\n    this.actividades = [];\n    this.funciones = [];\n    this.logros = [];\n    this.funcionesArray = [];\n  }\n\n  eliminarElemento(elemento: PeriodicElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarExperiencias(this.dataSource.data);\n  }\n\n  // Para la parte de funcion campo logros y funciones\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  visibleFun = true;\n  selectableFun = true;\n  removableFun = true;\n  addOnBlurFun = true;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  logros: Logro[] = [];\n  funcionesArray: Funcion[] = [];\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.logros.push({nombreLogro: value.trim()});\n      this.actividades.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(logro: Logro): void {\n    const index = this.logros.indexOf(logro);\n\n    if (index >= 0) {\n      this.logros.splice(index, 1);\n      this.actividades.splice(index, 1);\n    }\n  }\n\n  addFunciones(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.funcionesArray.push({nombreFuncion: value.trim()});\n      this.funciones.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeFunciones(funcion: Funcion): void {\n    const index = this.funcionesArray.indexOf(funcion);\n\n    if (index >= 0) {\n      this.funcionesArray.splice(index, 1);\n      this.funciones.splice(index, 1);\n    }\n  }\n}","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">EXPERIENCIA LABORAL / WORK EXPERIENCE</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.empresa }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.empresa }}\" name=\"empresa\" required [(ngModel)]=\"empresa\">\n            <mat-error *ngIf=\"!empresa\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.puesto }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.puesto }}\" name=\"puesto\" required [(ngModel)]=\"puesto\">\n            <mat-error *ngIf=\"!puesto\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerInicio\" name=\"fechaIni\" placeholder=\"{{ languageTexts.fechaIniU }}\" required [(ngModel)]=\"fechaInicio\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicio></mat-datepicker>\n            <mat-error *ngIf=\"!fechaInicio\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerFin\" name=\"fechaFin\" placeholder=\"{{ languageTexts.fechaFinU }}\" required [(ngModel)]=\"fechaFin\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerFin\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerFin></mat-datepicker>\n            <mat-error *ngIf=\"!fechaFin\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n\n          <!-- Agregar botón para establecer la fecha actual -->\n          <span style=\"padding-right: 5px;\">{{ languageTexts.fechaActual }}</span>\n          <button mat-button matSuffix (click)=\"setFechaActual()\">{{ languageTexts.actual }}</button>\n        </div>\n\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-chip-list #chipList required>\n              <mat-chip *ngFor=\"let logro of logros\" [selectable]=\"selectable\"\n                        [removable]=\"removable\" (removed)=\"remove(logro)\">\n                {{logro.nombreLogro}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n              </mat-chip>\n              <input placeholder=\"{{ languageTexts.logros }}\" required\n                     [matChipInputFor]=\"chipList\"\n                     [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                     [matChipInputAddOnBlur]=\"addOnBlur\"\n                     (matChipInputTokenEnd)=\"add($event)\">\n            </mat-chip-list>\n            <mat-error *ngIf=\"logros.length === 0\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>        \n\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-chip-list #chipList2 required>\n              <mat-chip *ngFor=\"let funcion of funcionesArray\" [selectable]=\"selectableFun\"\n                       [removable]=\"removableFun\" (removed)=\"removeFunciones(funcion)\">\n                {{funcion.nombreFuncion}}\n                <mat-icon matChipRemove *ngIf=\"removableFun\">cancel</mat-icon>\n              </mat-chip>\n              <input placeholder=\"{{ languageTexts.funciones }}\"\n                     [matChipInputFor]=\"chipList2\"\n                     [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                     [matChipInputAddOnBlur]=\"addOnBlurFun\"\n                     (matChipInputTokenEnd)=\"addFunciones($event)\">\n            </mat-chip-list>\n            <mat-error *ngIf=\"funciones.length === 0\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n        \n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarExperiencia()\">{{ languageTexts.guardarExp }}</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <ng-container matColumnDef=\"empresa\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 150px;\"> {{ languageTexts.empresa }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 150px;\"> {{ element.empresa }} </td>\n          </ng-container>\n          \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"puesto\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\"> {{ languageTexts.puesto }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 100px;\"> {{ element.puesto }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaIni\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\"> {{ languageTexts.fechaInicio }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 100px;\"> {{ element.fechaIni | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaFin\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\"> {{ languageTexts.fechaFin }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 100px;\"> {{ element.fechaFin | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"actividades\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.logroet }} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <ul>\n                <li *ngFor=\"let actividad of element.actividades\">{{ actividad }}</li>\n              </ul>\n            </td>\n          </ng-container>       \n          \n          <ng-container matColumnDef=\"funciones\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.funcionet }} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <ul>\n                <li *ngFor=\"let funcion of element.funciones\">{{ funcion }}</li>\n              </ul>\n            </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 40px;\"> {{ languageTexts.eliminar }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 40px;\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-comentarios',\n  templateUrl: './comentarios.component.html',\n  styleUrls: ['./comentarios.component.scss']\n})\nexport class ComentariosComponent implements OnInit {\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) { \n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n  }\n\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n  comentario: string = '';\n  disenoHoja: string = 'Diseño de una columna';\n\n  ngOnInit(): void {\n  }\n\n  \n  enviarDatos() {\n    console.log(this.disenoHoja)\n    this.dataFormularioService.guardarDatos(this.comentario, this.disenoHoja);\n  }\n\n  todosArreglosLlenos(): boolean {\n    return this.dataFormularioService.tieneEstudios &&\n           this.dataFormularioService.tieneConocimientos &&\n           this.dataFormularioService.tieneExperiencias &&\n           this.dataFormularioService.tieneIdiomas &&\n           this.dataFormularioService.tienePersonal\n  }\n}\n","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">NOTAS O COMENTARIOS / NOTES OR COMMENTS</h2>\n    <form class=\"formulario\" (ngSubmit)=\"enviarDatos()\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.comentarios }}</mat-label>\n            <textarea matInput class=\"mi-textarea\" placeholder=\"{{ languageTexts.comentarios }}\" name=\"comentario\" [(ngModel)]=\"comentario\"></textarea>\n          </mat-form-field>\n        </div>\n       </div>\n       <div class=\"lip\">\n        <div>\n            <mat-form-field style=\"margin-right: 10px;\">\n                <mat-select placeholder=\"{{ languageTexts.estilos }}\" name=\"disenoHoja\" [(ngModel)]=\"disenoHoja\">\n                    <mat-option value=\"Diseño de una columna\">{{ languageTexts.estilo1 }}</mat-option>\n                    <mat-option value=\"Diseño de dos columnas\">{{ languageTexts.estilo2 }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-raised-button class=\"btazul\"  [disabled]=\"!todosArreglosLlenos()\" type=\"submit\">{{ languageTexts.generarDoc }}</button>\n      </div>\n       </form>\n  </div>","export function printDiv2(nombre, apellido, nacionalidad, edad, ciudad, pais, estudios, conocimientos, experiencias, cursos, idiomas, languageTexts) {\r\n\r\n    var a = window.open(\"\", \"\", \"height=1000, width=1000\");\r\n    a.document.write(\"<html><body>\");\r\n\r\n    //Encabezado\r\n    a.document\r\n        .write(`<div style=\"display: block; align-items: center; width:1000;\"> <div style=\"display: flex;\r\n          margin: 15px 5px;\">`);\r\n    a.document.write(\r\n        '<img style=\"width: 120;\" src=\"./assets/images/logo.png\" alt=\"logo\">'\r\n    );\r\n    a.document.write(\r\n        '<h3 style=\"flex: 1; text-align: right; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 18px; color: #31DCFE !important; margin-right: 100px;\">Curriculum Vitae</h3>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n    //Datos Personales\r\n    a.document.write('<div style=\"margin-top: 20px;\">');\r\n    a.document.write(`<div style=\"font-weight: bold; font-family: \\'Mediator Serif Narrow Bold\\'; font-size: 40px;\"><label>${apellido} ${nombre}</label></div>`);\r\n    a.document.write(`<div style=\"font-family: \\'TilpSerif EF Bold Italic\\'; font-size: 16px;\"><label>${languageTexts.edad}: ${edad}</label></div>`);\r\n    a.document.write(`<div style=\"font-family: \\'TilpSerif EF Bold Italic\\'; font-size: 16px;\"><label>${languageTexts.nacionalidad}: ${nacionalidad}</label></div>`);\r\n    a.document.write(`<div style=\"font-family: \\'TilpSerif EF Bold Italic\\'; font-size: 16px;\"><label>${languageTexts.ciudad}: ${ciudad}</label></div>`);\r\n    a.document.write(`<div style=\"font-family: \\'TilpSerif EF Bold Italic\\'; font-size: 16px;\"><label>${languageTexts.pais}: ${pais}</label></div>`);\r\n    a.document.write(\"</div>\");\r\n\r\n    //SEPARAMIENTO DEL PDF\r\n    a.document.write(\r\n        '<div style=\"display: flex; align-items: flex-start; width:100%;\">'\r\n    );\r\n\r\n    // =========== 2 COLUMNAS ============\r\n    a.document.write('<div style=\"display: flex; flex: 1;\">');\r\n\r\n    // =========== Columna 1 ============\r\n    a.document.write('<div style=\"flex: 1; margin-right: 20px;\">');\r\n\r\n    // =========== 1. EXPERIENCIA LABORAL ============\r\n    a.document.write(\r\n        '<div style=\"display: flex; flex-direction: column;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n        '<label style=\"font-weight: bold; font-family: \\'Tara SC Bold\\'; color: #3D5FEA !important; font-size: 20px; margin-top: 2%; \">' + languageTexts.experiencialab + '</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n\r\n    function capitalizarPrimeraLetra(cadena) {\r\n        return cadena.charAt(0).toUpperCase() + cadena.slice(1);\r\n      }\r\n    // Aquí debes añadir el código para mostrar la experiencia laboral\r\n    experiencias.forEach(experiencia => {\r\n        a.document.write('<div style=\"margin-top: 15px;\">');\r\n        a.document.write(`<p style=\"font-family: \\'Mediator Serif Narrow Bold\\', sans-serif; font-size: 18px; margin-bottom: 5px; color: #444;\"><strong>${experiencia.puesto}</strong> - <strong>${experiencia.empresa}</strong></p>`);\r\n    \r\n        // =========== Tiempo ============\r\n        // Convertir las fechas a objetos de fecha JavaScript\r\n    const fechaInicio = new Date(experiencia.fechaIni);\r\n    const fechaFin = new Date(experiencia.fechaFin);\r\n\r\n    // Obtener el mes y el año actual\r\n    const mesActual = capitalizarPrimeraLetra(new Date().toLocaleString('default', { month: 'long' }));\r\n    const añoActual = new Date().getFullYear();\r\n\r\n    // Extraer el mes y el año de cada fecha\r\n    const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n    const añoInicio = fechaInicio.getFullYear();\r\n    let mesFin, añoFin;\r\n\r\n    // Verificar si la fecha fin es igual al mes y año actuales\r\n    if (fechaFin.getMonth() === new Date().getMonth() && fechaFin.getFullYear() === añoActual) {\r\n        mesFin = languageTexts.actualidad;\r\n        añoFin = \"\";\r\n    } else {\r\n        mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n        añoFin = fechaFin.getFullYear();\r\n    }\r\n\r\n    // Construir la cadena de tiempo formateada\r\n    const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n\r\n    a.document.write(`<p style=\"font-family: 'Tara SC Light', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${tiempoFormateado}</p>`);\r\n    \r\n        a.document.write('<div style=\"font-family: \\'Tanseek Traditional Medium\\', sans-serif; font-size: 16px; margin-bottom: 10px; color: #666;\"><ul style=\"list-style-type: disc; padding-left: 20px;\">'); // Inicio de la lista\r\n        experiencia.actividades.forEach(function(actividad) {\r\n            a.document.write(`<li>${actividad}</li>`); // Mostrar cada actividad como un elemento de lista\r\n        });\r\n        a.document.write('</ul></div>'); // Fin de la lista\r\n    \r\n        a.document.write('<div style=\"font-family: \\'Tanseek Traditional Medium\\', sans-serif; font-size: 16px; margin-bottom: 10px; color: #666;\"><ul style=\"list-style-type: disc; padding-left: 20px;\">'); // Inicio de la lista\r\n        experiencia.funciones.forEach(function(funcion) {\r\n            a.document.write(`<li>${funcion}</li>`); // Mostrar cada función como un elemento de lista\r\n        });\r\n        a.document.write('</ul></div>'); // Fin de la lista\r\n    \r\n        a.document.write(\"</div>\"); // Cerrar el div de la experiencia laboral\r\n    });\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== 2. ESTUDIOS ============\r\n    a.document.write(\r\n        '<div style=\"display: flex; flex-direction: column; margin-top: 20px;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n        '<label style=\"font-weight: bold; font-family: \\'Tara SC Bold\\'; color: #3D5FEA !important; font-size: 20px; margin-top: 2%; \">' + languageTexts.estudioscursados + '</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    \r\n    estudios.forEach(estudio => {\r\n        a.document.write('<div style=\"margin-top: 15px;\">');\r\n        a.document.write(`<p style=\"font-family: \\'Mediator Serif Narrow Bold\\', sans-serif; font-size: 18px; margin-bottom: 5px; color: #444;\"><strong>${estudio.universidad}</strong></strong></p>`);\r\n        a.document.write(`<p style=\"font-family: \\'TilpSerif EF Bold Italic\\', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${estudio.carrera}</p>`);\r\n\r\n        // =========== Tiempo ============\r\n        // Convertir las fechas a objetos de fecha JavaScript\r\n        const fechaInicio = new Date(estudio.fechaIni);\r\n        const fechaFin = new Date(estudio.generacion);\r\n\r\n        // Obtener el mes y el año actual\r\n        const mesActual = capitalizarPrimeraLetra(new Date().toLocaleString('default', { month: 'long' }));\r\n        const añoActual = new Date().getFullYear();\r\n\r\n        // Extraer el mes y el año de cada fecha\r\n    const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n    const añoInicio = fechaInicio.getFullYear();\r\n    let mesFin, añoFin;\r\n\r\n    // Verificar si la fecha fin es igual al mes y año actuales\r\n    if (fechaFin.getMonth() === new Date().getMonth() && fechaFin.getFullYear() === añoActual) {\r\n        mesFin = languageTexts.actualidad;\r\n        añoFin = \"\";\r\n    } else {\r\n        mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n        añoFin = fechaFin.getFullYear();\r\n    }\r\n\r\n    // Construir la cadena de tiempo formateada\r\n    const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n\r\n        a.document.write(`<p style=\"font-family: \\'Tara SC Light\\', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${tiempoFormateado}</p>`);\r\n\r\n        a.document.write(\"</div>\"); // Cerrar el div del conocimiento\r\n    });\r\n    a.document.write(\"</div>\");\r\n\r\n    // Verificar si hay cursos antes de escribir el contenido\r\n    if (cursos.length > 0) {\r\n    // =========== 3. CURSOS ============\r\n    a.document.write(\r\n        '<div style=\"display: flex; flex-direction: column; margin-top: 20px;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n        '<label style=\"font-weight: bold; font-family: \\'Tara SC Bold\\'; font-size: 20px; color: #3D5FEA !important;  margin-top: 2%; \">' + languageTexts.otrosEstudios + '</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    // Aquí debes añadir el código para mostrar los cursos\r\n    cursos.forEach(curso => {\r\n        a.document.write('<div style=\"margin-top: 15px;\">');\r\n        a.document.write(`<p style=\"font-family: \\'Mediator Serif Narrow Bold\\', sans-serif; font-size: 18px; margin-bottom: 5px; color: #444;\"><strong>${curso.nombre}</strong></strong></p>`);\r\n         // =========== Tiempo ============\r\n        // Convertir las fechas a objetos de fecha JavaScript\r\n        const fechaInicio = new Date(curso.fechaIni);\r\n        const fechaFin = new Date(curso.fechaFin);\r\n\r\n        // Obtener el mes y el año actual\r\n        const mesActual = capitalizarPrimeraLetra(new Date().toLocaleString('default', { month: 'long' }));\r\n        const añoActual = new Date().getFullYear();\r\n\r\n        // Extraer el mes y el año de cada fecha\r\n        const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n        const añoInicio = fechaInicio.getFullYear();\r\n        let mesFin, añoFin;\r\n\r\n        // Verificar si la fecha fin es igual al mes y año actuales\r\n        if (fechaFin.getMonth() === new Date().getMonth() && fechaFin.getFullYear() === añoActual) {\r\n            mesFin = languageTexts.actualidad;\r\n            añoFin = \"\";\r\n        } else {\r\n            mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n            añoFin = fechaFin.getFullYear();\r\n        }\r\n\r\n        // Construir la cadena de tiempo formateada\r\n        const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n        \r\n        a.document.write(`<p style=\"font-family: \\'TilpSerif EF Bold Italic\\', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${curso.organizacion}</p>`);\r\n        \r\n        a.document.write(`<p style=\"font-family: \\'Tara SC Light\\', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${tiempoFormateado}</p>`);\r\n        a.document.write(`<p style=\"font-family: \\'Tanseek Traditional Medium\\', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${curso.entidad} - ${curso.tiempoEstudio}</p>`);\r\n        a.document.write(`<p style=\"font-family: \\'Tanseek Traditional Medium\\', sans-serif; font-size: 16px; margin-bottom: 5px; color: #666;\">${curso.descripcion}</p>`);\r\n\r\n        a.document.write(\"</div>\");\r\n    });\r\n\r\n    a.document.write(\"</div>\");\r\n}\r\n\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== Columna 2 ============\r\n    a.document.write('<div style=\"flex: 1;\">');\r\n\r\n    // =========== 4. CONOCIMIENTOS ============\r\n    a.document.write(\r\n        '<div style=\"display: flex; flex-direction: column;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n        '<label style=\"font-weight: bold; font-family: \\'Tara SC Bold\\'; color: #3D5FEA !important; font-size: 20px; margin-top: 2%; \">' + languageTexts.conocimientotec + '</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    // Aquí debes añadir el código para mostrar los conocimientos\r\n    conocimientos.forEach(conocimiento => {\r\n        a.document.write('<div style=\"margin-top: 1px;\">');\r\n        a.document.write(`<p style=\"font-family: \\'TilpSerif EF Bold Italic\\', sans-serif; font-size: 16px; margin-bottom: 2px; color: #444;\">${conocimiento.conocimiento}</p>`);\r\n        a.document.write(\"</div>\");\r\n    });\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== 5. IDIOMAS ============\r\n    a.document.write(\r\n        '<div style=\"display: flex; flex-direction: column; color: #3D5FEA !important; margin-top: 20px;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n        '<label style=\"font-weight: bold; font-family: \\'Tara SC Bold\\'; font-size: 20px; margin-top: 2%; \">' + languageTexts.idiomas + '</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    // Aquí debes añadir el código para mostrar los idiomas\r\n    idiomas.forEach(idioma => {\r\n        a.document.write('<div style=\"margin-top: 1px;\">');\r\n        a.document.write(`<p style=\"font-family: \\'TilpSerif EF Bold Italic\\', sans-serif; font-size: 16px; margin-bottom: 2px; color: #444;\">${idioma.idioma}</p>`);\r\n        a.document.write(\"</div>\");\r\n    });\r\n    a.document.write(\"</div>\");\r\n\r\n    a.document.write(\"</div>\");\r\n\r\n    a.document.write(\"</div>\");\r\n\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</body></html>\");\r\n\r\n    a.document.close();\r\n    setTimeout(function() {\r\n        a.print();\r\n    }, 1000);\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnChanges, SimpleChanges, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\nimport { ConocimientoElement } from '../models/conocimientos.interface';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-conocimientos',\n  templateUrl: './conocimientos.component.html',\n  styleUrls: ['./conocimientos.component.scss']\n})\nexport class ConocimientosComponent implements OnInit, OnChanges {\n  @Input() categoryTitle!: string;\n\n  selection = new SelectionModel<ConocimientoElement>(true, []);\n  dataSource = new MatTableDataSource<ConocimientoElement>([]);\n\n  conocimientosPLCs: ConocimientoElement[] = [\n    { conocimiento: 'SIEMENS (PLC)', position: 1 },\n    { conocimiento: 'ALLEN BRADLEY (PLC)', position: 2 },\n    { conocimiento: 'SCHNEIDER (PLC)', position: 3 },\n    { conocimiento: 'MITSUBISHI (PLC)', position: 4 },\n    { conocimiento: 'OMRON (PLC)', position: 5 },\n    { conocimiento: 'ABB (PLC)', position: 6 },\n    // Agrega más elementos según sea necesario\n  ];\n\n  conocimientosHMIs: ConocimientoElement[] = [\n    { conocimiento: 'SIEMENS (HMI)', position: 1 },\n    { conocimiento: 'ALLEN BRADLEY (HMI)', position: 2 },\n    { conocimiento: 'SCHNEIDER (HMI)', position: 3 },\n    // Agrega más elementos según sea necesario\n  ];\n\n  conocimientosDrivesServos: ConocimientoElement[] = [\n    { conocimiento: 'SIEMENS (Drive/Servo)', position: 1 },\n    { conocimiento: 'ALLEN BRADLEY (Drive/Servo)', position: 2 },\n    { conocimiento: 'SCHNEIDER (Drive/Servo)', position: 3 },\n    { conocimiento: 'YASKAWA (Drive/Servo)', position: 4 },\n    { conocimiento: 'LENZE (Drive/Servo)', position: 5 },\n    { conocimiento: 'ABB (Drive/Servo)', position: 6 },\n    // Agrega más elementos según sea necesario\n  ];\n\n  conocimientosSoftware: ConocimientoElement[] = [\n    { conocimiento: 'TIA Portal', position: 1 },\n    { conocimiento: 'STEP 7', position: 2 },\n    { conocimiento: 'WINCC', position: 3 },\n    { conocimiento: 'PCS7', position: 4 },\n    { conocimiento: 'StartDrive', position: 5 },\n    { conocimiento: 'Starter', position: 6 },\n    { conocimiento: 'Studio5000', position: 7 },\n    { conocimiento: 'RSLogix', position: 8 },\n    { conocimiento: 'Factory Talk View ME/SE', position: 9 },\n    { conocimiento: 'Component WorkBench', position: 10 },\n    { conocimiento: 'PlantPAx', position: 11 },\n    { conocimiento: 'DriveTools', position: 12 },\n    { conocimiento: 'RSNetworx', position: 13 },\n    { conocimiento: 'EcoStruxure Control Expert', position: 14 },\n    { conocimiento: 'Unity Pro', position: 15 },\n    { conocimiento: 'Vijeo Designer', position: 16 },\n    { conocimiento: 'SoMove', position: 17 },\n    // Agrega más elementos según sea necesario\n  ];\n\n  conocimientosLenguaje: ConocimientoElement[] = [\n    { conocimiento: 'Ladder', position: 1 },\n    { conocimiento: 'FBD', position: 2 },\n    { conocimiento: 'ST', position: 3 },\n    { conocimiento: 'IL', position: 4 },\n    { conocimiento: 'SFC', position: 5 },\n    { conocimiento: 'GRAFCET', position: 6 },\n    // Agrega más elementos según sea necesario\n  ];\n\n  conocimientosNetwork: ConocimientoElement[] = [\n    { conocimiento: 'Profinet', position: 1 },\n    { conocimiento: 'Profibus DP', position: 2 },\n    { conocimiento: 'Ethernet IP', position: 3 },\n    { conocimiento: 'ControlNet', position: 4 },\n    { conocimiento: 'DeviceNet', position: 5 },\n    { conocimiento: 'EtherCat', position: 6 },\n    // Agrega más elementos según sea necesario\n  ];\n\n  conocimiento: string = '';\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n\n  displayedColumns = ['select', 'conocimiento', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n  }\n\n  ngOnInit(): void {\n    this.updateDataSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['categoryTitle']) {\n      this.updateDataSource();\n    }\n  }\n\n  updateDataSource() {\n    switch (this.categoryTitle) {\n      case 'PLCs':\n        this.dataSource.data = this.conocimientosPLCs;\n        break;\n      case 'HMIs':\n        this.dataSource.data = this.conocimientosHMIs;\n        break;\n      case 'DRIVEs / SERVOs':\n        this.dataSource.data = this.conocimientosDrivesServos;\n        break;\n      case 'Software':\n        this.dataSource.data = this.conocimientosSoftware;\n        break;\n      case 'Lenguaje de programación':\n        this.dataSource.data = this.conocimientosLenguaje;\n        break;\n        case 'Language of programming':\n          this.dataSource.data = this.conocimientosLenguaje;\n          break;\n      case 'Network':\n        this.dataSource.data = this.conocimientosNetwork;\n        break;\n      default:\n        this.dataSource.data = [];\n        break;\n    }\n  }\n\n  guardarConocimiento(): void {\n    if (this.conocimiento) {\n      const nuevaExperiencia: ConocimientoElement = {\n        conocimiento: this.conocimiento,\n        position: (this.dataSource.data.length + 1)\n      };\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data];\n      \n      this.selection.select(nuevaExperiencia);\n\n      this.dataFormularioService.guardarConocimientos(this.selection.selected);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.conocimiento = '';\n  }\n\n  eliminarElemento(elemento: ConocimientoElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.selection.deselect(elemento);\n    this.dataFormularioService.eliminarConocimientos([elemento]);\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    if (this.isAllSelected()) {\n      const deselectedElements = [...this.selection.selected];\n      this.selection.clear();\n      this.dataFormularioService.eliminarConocimientos(deselectedElements);\n    } else {\n      this.dataSource.data.forEach(row => this.selection.select(row));\n      this.dataFormularioService.guardarConocimientos(this.selection.selected);\n    }\n  }\n\n  checkboxLabel(row?: ConocimientoElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  toggleSelection(row: ConocimientoElement) {\n    this.selection.toggle(row);\n    if (this.selection.isSelected(row)) {\n      this.dataFormularioService.guardarConocimientos([row]);\n    } else {\n      this.dataFormularioService.eliminarConocimientos([row]);\n    }\n  }\n}\n","<!-- app-conocimientos.component.html -->\n<div class=\"conocimientos-container\">\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{ categoryTitle }}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <div class=\"example-container mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"select\">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox \n              (change)=\"masterToggle()\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n              [aria-label]=\"checkboxLabel()\">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <mat-checkbox \n              (click)=\"$event.stopPropagation()\"\n              (change)=\"toggleSelection(row)\"\n              [checked]=\"selection.isSelected(row)\"\n              [aria-label]=\"checkboxLabel(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"conocimiento\">\n          <th mat-header-cell *matHeaderCellDef> {{ languageTexts.conocimiento }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.conocimiento }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"eliminar\">\n          <th mat-header-cell *matHeaderCellDef>  {{ languageTexts.eliminar }}  </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>    \n  </mat-expansion-panel>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-estudios',\n  templateUrl: './estudios.component.html',\n  styleUrls: ['./estudios.component.scss']\n})\nexport class EstudiosComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<EstudioElement>([]);\n  universidad: string = '';\n  carrera: string = '';\n  generacion: Date | null = null;\n  fechaIni: Date | null = null;\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n  fechaActual: Date = new Date();\n\n  displayedColumns = ['universidad', 'carrera', 'fechaIni', 'generacion', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  guardarEstudio(): void {\n    if (this.universidad && this.carrera && this.generacion && this.fechaIni) {\n      const nuevaExperiencia: EstudioElement = {\n        universidad: this.universidad,\n        carrera: this.carrera,\n        generacion: this.generacion,\n        fechaIni: this.fechaIni\n      };\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      this.dataFormularioService.guardarEstudios(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.universidad = '';\n    this.carrera = '';\n    this.generacion = null;\n    this.fechaIni = null;\n  }\n\n  eliminarElemento(elemento: EstudioElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarEstudios(this.dataSource.data);\n  }\n\n  setFechaActual() {\n    this.generacion = this.fechaActual;\n  }\n}\n\nexport interface EstudioElement {\n  universidad: string;\n  carrera: string;\n  fechaIni: Date;\n  generacion: Date;\n}\n","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">UNIVERSIDAD / UNIVERSITY</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.universidad }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.universidad }}\" name=\"universidad\" required [(ngModel)]=\"universidad\">\n            <mat-error *ngIf=\"!universidad\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"columna\">\n            <mat-form-field class=\"campo\">\n              <mat-label>{{ languageTexts.carrera }}</mat-label>\n              <input matInput placeholder=\"{{ languageTexts.carrera }}\" name=\"carrera\" required [(ngModel)]=\"carrera\">\n              <mat-error *ngIf=\"!carrera\">{{ languageTexts.obligatorio }}</mat-error>\n            </mat-form-field>\n          </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerIn\" name=\"fechaIni\" placeholder=\"{{ languageTexts.fechaIniU }}\" required [(ngModel)]=\"fechaIni\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerIn\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerIn></mat-datepicker>\n            <mat-error *ngIf=\"!fechaIni\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerInicio\" name=\"generacion\" placeholder=\"{{ languageTexts.fechaFinU }}\" required [(ngModel)]=\"generacion\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicio></mat-datepicker>\n            <mat-error *ngIf=\"!generacion\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n          <!-- Agregar botón para establecer la fecha actual -->\n          <span style=\"padding-right: 5px;\">{{ languageTexts.fechaActual }}</span>\n          <button mat-button matSuffix (click)=\"setFechaActual()\">{{ languageTexts.actual }}</button>\n        </div>\n        \n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarEstudio()\">{{ languageTexts.guardarEstu }}</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"universidad\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.universidad }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.universidad }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"carrera\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.carrera }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.carrera }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaIni\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.fechaInicio }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.fechaIni | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"generacion\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.fechaFin }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.generacion | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef>  {{ languageTexts.eliminar }} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\nimport { ConocimientoElement } from '../models/conocimientos.interface';\nimport {SelectionModel} from '@angular/cdk/collections';\n\ntype Category = {\n  title: string;\n};\n\n@Component({\n  selector: 'app-conocimiento-total',\n  templateUrl: './conocimiento-total.component.html',\n  styleUrls: ['./conocimiento-total.component.scss']\n})\nexport class ConocimientoTotalComponent implements OnInit {\n\n  selection = new SelectionModel<ConocimientoElement>(true, []);\n  dataSource = new MatTableDataSource<ConocimientoElement>([]);\n  categories: Category[] = [];\n  conocimiento: string = '';\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n\n  displayedColumns = ['select','conocimiento', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n      this.updateCategories();\n    });\n   }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  \n  guardarConocimiento(): void {\n    if (this.conocimiento) {\n      const nuevaExperiencia: ConocimientoElement = {\n        conocimiento: this.conocimiento,\n        position: (this.dataSource.data.length + 1)\n      };\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data];\n      \n      this.selection.select(nuevaExperiencia);\n\n      this.dataFormularioService.guardarConocimientos(this.selection.selected);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.conocimiento = '';\n  }\n\n  eliminarElemento(elemento: ConocimientoElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.selection.deselect(elemento);\n    this.dataFormularioService.eliminarConocimientos([elemento]);\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    if (this.isAllSelected()) {\n      const deselectedElements = [...this.selection.selected];\n      this.selection.clear();\n      this.dataFormularioService.eliminarConocimientos(deselectedElements);\n    } else {\n      this.dataSource.data.forEach(row => this.selection.select(row));\n      this.dataFormularioService.guardarConocimientos(this.selection.selected);\n    }\n  }\n\n  checkboxLabel(row?: ConocimientoElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  toggleSelection(row: ConocimientoElement) {\n    this.selection.toggle(row);\n    if (this.selection.isSelected(row)) {\n      this.dataFormularioService.guardarConocimientos([row]);\n    } else {\n      this.dataFormularioService.eliminarConocimientos([row]);\n    }\n  }\n\n  updateCategories() {\n    this.categories = [\n      { title: 'PLCs' },\n      { title: 'HMIs' },\n      { title: 'DRIVEs / SERVOs' },\n      { title: 'Software' },\n      { title: this.languageTexts.lenguajeProgramacion },\n      { title: 'Network' }\n    ];\n\n    this.dataSource.data = [\n      { conocimiento: 'Safety', position: 1 },\n      { conocimiento: 'Sensores', position: 2 },\n      { conocimiento: 'Válvulas', position: 3 },\n      { conocimiento: 'Encoders', position: 4 },\n      { conocimiento: this.languageTexts.conocimiento5 , position: 5 },\n      { conocimiento: this.languageTexts.conocimiento6 , position: 6 },\n      { conocimiento: this.languageTexts.conocimiento7 , position: 7 },\n      // Agrega más elementos si es necesario\n    ];\n  }\n\n}\n","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">CONOCIMIENTO TECNICO / TECHNICIAL KNOWHOW</h2>\n    <form class=\"formularios\">\n      <div class=\"fila\">\n        <h3 class=\"titulo\">{{ languageTexts.indicaConocimiento }}</h3>\n      </div>\n\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.conocimiento }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.conocimiento }}\" name=\"conocimiento\" required [(ngModel)]=\"conocimiento\">\n            <mat-error *ngIf=\"!conocimiento\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n        \n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarConocimiento()\">{{ languageTexts.guardarCono }}</button>\n    </form>\n\n    <app-conocimientos\n    *ngFor=\"let category of categories\"\n    [categoryTitle]=\"category.title\">\n    </app-conocimientos>\n  \n    <div class=\"example-container mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"select\">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox \n              (change)=\"masterToggle()\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n              [aria-label]=\"checkboxLabel()\">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <mat-checkbox \n              (click)=\"$event.stopPropagation()\"\n              (change)=\"toggleSelection(row)\"\n              [checked]=\"selection.isSelected(row)\"\n              [aria-label]=\"checkboxLabel(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"conocimiento\">\n          <th mat-header-cell *matHeaderCellDef> {{ languageTexts.conocimiento }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.conocimiento }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"eliminar\">\n          <th mat-header-cell *matHeaderCellDef>  {{ languageTexts.eliminar }}  </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div> \n</div>\n  \n\n\n","export function printDiv2(nombre, apellido, nacionalidad,edad, ciudad, pais, estudios, conocimientos, experiencias,cursos, idiomas, languageTexts,comentarios, skills) {\r\n\r\n    var a = window.open(\"\", \"\", \"height=1000, width=1000\");\r\n    a.document.write(\"<html><body>\");\r\n\r\n    //Encabezado\r\n    a.document\r\n      .write(`<div style=\"display: block; align-items: center; width:1000;\"> <div style=\"display: flex;\r\n          margin: 15px 5px;\">`);\r\n    a.document.write(\r\n        '<img style=\"width: 120;\" src=\"./assets/images/logo.png\" alt=\"logo\">'\r\n    );\r\n    a.document.write(\r\n      '<h3 style=\"flex: 1; text-align: right; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 18px; color: #31DCFE !important; margin-right: 100px;\">Curriculum Vitae</h3>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n\r\n    // CV\r\n    a.document.write('<div style=\"margin-bottom:2%; text-align: left; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-size: 25px; font-family: \\'Franklin Gothic Medium Cond\\';\">Curriculum Vitae</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n\r\n    //SEPARAMIENTO DEL PDF\r\n    a.document.write(\r\n      '<div style=\"display: inline-block; align-items: center; width:100%;\">'\r\n    );\r\n  \r\n  \r\n    // =========== 1. DATOS PERSONALES ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; \">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">'+ languageTexts.datospersonales +'</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n  \r\n    // =========== Apellido y Nombre ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + languageTexts.apellidonombre + ': ' + apellido + ' ' + nombre + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== Nacionalidad ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:6; font-family: \\'Arial\\'; font-size: 18px;\"><label>'  + languageTexts.nacionalidad+  ': ' + nacionalidad + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== Edad ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:6; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + languageTexts.residenciaactual + ': ' + ciudad + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== Edad ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:6; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + languageTexts.edad + ': ' + edad + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== ESTUDIOS CURSADOS ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">' + languageTexts.estudioscursados + '</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n    // Supongamos que estudios es un arreglo de objetos con la estructura { nombreUniversidad, carrera, generacion }\r\n    // Iteramos sobre cada objeto en el arreglo\r\n    estudios.forEach(estudio => {\r\n      // =========== Universidad ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n      a.document.write(`<div style=\"font-weight: bold; flex:5; font-family: \\'Arial\\'; font-size: 18px;\"><label>${estudio.universidad}</label></div>`);\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Carrera ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write(`<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.carrera}: <strong>${estudio.carrera}</strong></label></div>`);\r\n      a.document.write(\"</div>\");\r\n\r\n      \r\n      // =========== Fecha inicio ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write(`<div style=\"flex:2; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.fechaInicio}: <strong>${estudio.fechaIni.getFullYear()}</strong></label></div>`);\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Generacion ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      \r\n      \r\n      const fechaHoy = new Date();\r\n\r\n      // Validación para reemplazar el año con \"Actualmente\" si la fecha coincide con la fecha de hoy\r\n      if (estudio.generacion.getDate() === fechaHoy.getDate() &&\r\n          estudio.generacion.getMonth() === fechaHoy.getMonth() &&\r\n          estudio.generacion.getFullYear() === fechaHoy.getFullYear()) {\r\n            a.document.write(`<div style=\"flex:2; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.generacion}: <strong>${languageTexts.actualidad}</strong></label></div>`);\r\n      } else {\r\n        a.document.write(`<div style=\"flex:2; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.generacion}: <strong>${estudio.generacion.getFullYear()}</strong></label></div>`);\r\n      }\r\n\r\n      a.document.write(\"</div>\");\r\n    });\r\n\r\n\r\n    // =========== CONOCIMIENTOS ============\r\n  \r\n    \r\n    // Si hay tanto conocimientos como skills, mostramos dos columnas\r\n    if (conocimientos.length > 0 && skills.length > 0) {\r\n        a.document.write('<div style=\"display: flex; width: 100%;\">');\r\n    \r\n\r\n    // Columna de conocimientos\r\n    a.document.write('<div style=\"flex: 1; margin-right: 20px;\">');\r\n    a.document.write('<div style=\"display: flex; flex-direction: column; margin-top:3%; border-bottom: 1px solid black;\">');\r\n    a.document.write('<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%;\">' + languageTexts.conocimientotec + '</label>');\r\n    a.document.write('</div>');\r\n\r\n    const numConocimientos = conocimientos.length;\r\n\r\n    for (let j = 0; j < numConocimientos; j++) {\r\n        const conocimiento = conocimientos[j];\r\n        // =========== Conocimiento ============\r\n        a.document.write('<div style=\"display: flex; align-items: center; margin-top: 10px;\">');\r\n        a.document.write('<div style=\"font-family: Arial; font-size: 18px; margin-right: 10px;\"><label>•</label></div>');\r\n        a.document.write(`<div style=\"font-family: Arial; font-size: 18px;\"><label>${conocimiento.conocimiento}</label></div>`);\r\n        a.document.write('</div>');\r\n    }\r\n\r\n    a.document.write('</div>');\r\n\r\n    // Columna de habilidades\r\n    a.document.write('<div style=\"flex: 1; margin-left: 20px;\">');\r\n    a.document.write('<div style=\"display: flex; flex-direction: column; margin-top:3%; border-bottom: 1px solid black;\">');\r\n    a.document.write('<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%;\">' + languageTexts.skillEt + '</label>');\r\n    a.document.write('</div>');\r\n\r\n    const numSkills = skills.length;\r\n\r\n    for (let j = 0; j < numSkills; j++) {\r\n        const skill = skills[j];\r\n        // =========== Skill ============\r\n        a.document.write('<div style=\"display: flex; align-items: center; margin-top: 10px;\">');\r\n        a.document.write('<div style=\"font-family: Arial; font-size: 18px; margin-right: 10px;\"><label>•</label></div>');\r\n        a.document.write(`<div style=\"font-family: Arial; font-size: 18px;\"><label>${skill.skill}</label></div>`);\r\n        a.document.write('</div>');\r\n    }\r\n\r\n    a.document.write('</div>');\r\n    a.document.write('</div>');\r\n    } else {\r\n      a.document.write('<div style=\"display: flex; border-bottom: 1px solid black;\">');\r\n      a.document.write('<div style=\"display: flex; flex-direction: column; margin-top:3%;\">');\r\n      a.document.write('<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%;\">' + languageTexts.conocimientotec + '</label>');\r\n      a.document.write('</div>'); // Cerramos la última columna\r\n      a.document.write(\"</div>\");\r\n        // Si no hay skills, mostramos solo la columna de conocimientos como está actualmente\r\n        a.document.write('<div style=\"display: flex;\">');\r\n    \r\n        const numConocimientos = conocimientos.length;\r\n        const numColumnas = Math.ceil(numConocimientos / 8); // Calcula el número de columnas necesarias\r\n    \r\n        for (let i = 0; i < numColumnas; i++) {\r\n            // Abre una nueva columna\r\n            a.document.write('<div style=\"flex: 1; margin-right: 20px;\">');\r\n    \r\n            // Itera sobre los 8 conocimientos para esta columna o menos si no hay suficientes\r\n            for (let j = i * 8; j < Math.min((i + 1) * 8, numConocimientos); j++) {\r\n                const conocimiento = conocimientos[j];\r\n                // =========== Conocimiento ============\r\n                a.document.write('<div style=\"display: flex; align-items: center; margin-top: 10px;\">');\r\n                a.document.write('<div style=\"font-family: Arial; font-size: 18px; margin-right: 10px;\"><label>•</label></div>');\r\n                a.document.write(`<div style=\"font-family: Arial; font-size: 18px;\"><label>${conocimiento.conocimiento}</label></div>`);\r\n                a.document.write('</div>');\r\n            }\r\n    \r\n            // Si la columna no tiene 8 conocimientos, añade espacios en blanco\r\n            const numConocimientosEnColumna = Math.min(numConocimientos - i * 8, 8);\r\n            for (let k = numConocimientosEnColumna; k < 8; k++) {\r\n                a.document.write('<div style=\"height: 22px;\"></div>'); // Espacio en blanco para completar 8 elementos\r\n            }\r\n    \r\n            // Cierra la columna actual\r\n            a.document.write('</div>');\r\n        }\r\n    \r\n        a.document.write('</div>'); // Cierra el contenedor de la única columna\r\n    }\r\n    \r\n\r\n    // =========== EXPERIENCIA LAB ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">'+languageTexts.experiencialab+'</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n    function capitalizarPrimeraLetra(cadena) {\r\n      return cadena.charAt(0).toUpperCase() + cadena.slice(1);\r\n    }\r\n\r\n    // Iteramos sobre cada objeto en el arreglo\r\n    experiencias.forEach(experiencia => {\r\n      // =========== Puesto ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n      a.document.write('<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>'+languageTexts.puesto+': <strong>'+experiencia.puesto+'</strong></label></div>');\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Empresa ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write('<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>'+languageTexts.empresa+': <strong>'+experiencia.empresa+'</strong></label></div>');\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Tiempo ============\r\n      // Convertir las fechas a objetos de fecha JavaScri\r\n      \r\n      const fechaInicio = new Date(experiencia.fechaIni);\r\n      const fechaFin = new Date(experiencia.fechaFin);\r\n\r\n      // Obtener el mes y el año actual\r\n      const mesActual = capitalizarPrimeraLetra(new Date().toLocaleString('default', { month: 'long' }));\r\n      const añoActual = new Date().getFullYear();\r\n\r\n      // Extraer el mes y el año de cada fecha\r\n      const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n      const añoInicio = fechaInicio.getFullYear();\r\n      let mesFin, añoFin;\r\n\r\n      // Verificar si la fecha fin es igual al mes y año actuales\r\n      if (fechaFin.getMonth() === new Date().getMonth() && fechaFin.getFullYear() === añoActual) {\r\n          mesFin = languageTexts.actualidad;\r\n          añoFin = \"\";\r\n      } else {\r\n          mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n          añoFin = fechaFin.getFullYear();\r\n      }\r\n\r\n      // Construir la cadena de tiempo formateada\r\n      const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n\r\n      // Escribir en el documento\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write('<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>'+languageTexts.fecha+': <strong>'+tiempoFormateado+'</strong></label></div>');\r\n      a.document.write(\"</div>\");\r\n\r\n\r\n      // =========== Logros ============\r\n      a.document.write('<div style=\"font-weight: bold; font-family: \\'Arial\\'; font-size: 18px; margin-bottom: 5px; margin-top: 10px;\"><label>'+languageTexts.logroet+':</label></div>');\r\n      a.document.write('<div style=\"font-family: \\'Arial\\'; font-size: 18px; margin-bottom: 10px;\">');\r\n      a.document.write('<ul>'); // Inicio de la lista\r\n      experiencia.actividades.forEach(function(actividad) {\r\n        a.document.write(`<li>${actividad}</li>`); // Mostrar cada actividad como un elemento de lista\r\n      });\r\n      a.document.write('</ul>'); // Fin de la lista\r\n      a.document.write(\"</div>\");\r\n\r\n\r\n       // =========== Funciones ============\r\n       a.document.write('<div style=\"font-weight: bold; font-family: \\'Arial\\'; font-size: 18px; margin-bottom: 5px; margin-top: 10px;\"><label>'+languageTexts.funcionet+':</label></div>');\r\n       a.document.write('<div style=\"font-family: \\'Arial\\'; font-size: 18px; margin-bottom: 10px;\">');\r\n       a.document.write('<ul>'); // Inicio de la lista\r\n       experiencia.funciones.forEach(function(funcion) {\r\n         a.document.write(`<li>${funcion}</li>`); \r\n       });\r\n       a.document.write('</ul>'); // Fin de la lista\r\n       a.document.write(\"</div>\");\r\n      \r\n      a.document.write(\"</div>\");\r\n    });\r\n\r\n\r\n    // Verificar si hay cursos antes de escribir el contenido\r\n    if (cursos.length > 0) {\r\n      // =========== CURSOS ============\r\n      a.document.write(\r\n          '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n      );\r\n      a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n      a.document.write(\r\n          '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">'+languageTexts.otrosEstudios+'</label>'\r\n      );\r\n      a.document.write(\"</div>\");\r\n      a.document.write(\"</div>\");\r\n\r\n      // Iteramos sobre cada objeto en el arreglo\r\n      cursos.forEach(curso => {\r\n          // =========== nombre ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n          a.document.write(`<div style=\"font-weight: bold; flex:6; font-family: \\'Arial\\'; font-size: 18px;\"><label>${curso.nombre}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          // =========== Tiempo ============\r\n          // Convertir las fechas a objetos de fecha JavaScri\r\n          \r\n          const fechaInicio = new Date(curso.fechaIni);\r\n          const fechaFin = new Date(curso.fechaFin);\r\n\r\n          // Obtener el mes y el año actual\r\n        const mesActual = capitalizarPrimeraLetra(new Date().toLocaleString('default', { month: 'long' }));\r\n        const añoActual = new Date().getFullYear();\r\n\r\n        // Extraer el mes y el año de cada fecha\r\n        const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n        const añoInicio = fechaInicio.getFullYear();\r\n        let mesFin, añoFin;\r\n\r\n        // Verificar si la fecha fin es igual al mes y año actuales\r\n        if (fechaFin.getMonth() === new Date().getMonth() && fechaFin.getFullYear() === añoActual) {\r\n            mesFin = languageTexts.actualidad;\r\n            añoFin = \"\";\r\n        } else {\r\n            mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n            añoFin = fechaFin.getFullYear();\r\n        }\r\n\r\n          // Construir la cadena de tiempo formateada\r\n          const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n\r\n          // =========== organizacion ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n          a.document.write(`<div style=\"font-weight: bold; flex:2; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.organizacion}: ${curso.organizacion}</label></div>`);\r\n          a.document.write(`<div style=\"font-weight: bold; flex:8; font-family: \\'Arial\\'; font-size: 18px;\"><label>${tiempoFormateado}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          // =========== descripcion ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n          a.document.write(`<div style=\"flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.descripcion}: ${curso.descripcion}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          // =========== Entidad ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n          a.document.write(`<div style=\"flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.entidad}: ${curso.entidad}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n                // =========== Horas ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n          a.document.write(`<div style=\"flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>${languageTexts.tiempodeEst}: ${curso.tiempoEstudio}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          a.document.write(\"</div>\");\r\n      });\r\n    }\r\n\r\n    // =========== IDIOMAS ============\r\n    a.document.write('<div style=\"display: flex; border-bottom: 1px solid black;\">');\r\n    a.document.write('<div style=\"display: flex; flex-direction: column; margin-top:3%;\">');\r\n    a.document.write('<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">'+languageTexts.idiomas+'</label>');\r\n    a.document.write('</div>'); // Cerramos la última columna\r\n    a.document.write(\"</div>\");\r\n\r\n    a.document.write('<div style=\"display: flex;\">');\r\n\r\n    const numIdiomas = idiomas.length;\r\n    const numColumnasI = Math.ceil(numIdiomas / 8); // Calcula el número de columnas necesarias\r\n\r\n    for (let i = 0; i < numColumnasI; i++) {\r\n          // Abre una nueva columna\r\n          a.document.write('<div style=\"flex: 1; margin-right: 20px;\">');\r\n\r\n          // Itera sobre los 8 conocimientos para esta columna o menos si no hay suficientes\r\n          for (let j = i * 8; j < Math.min((i + 1) * 8, numIdiomas); j++) {\r\n              const idioma = idiomas[j];\r\n              // =========== Conocimiento ============\r\n              a.document.write('<div style=\"display: flex; align-items: center; margin-top: 10px;\">');\r\n              a.document.write('<div style=\"font-family: Arial; font-size: 18px; margin-right: 10px;\"><label>•</label></div>');\r\n              a.document.write(`<div style=\"font-family: Arial; font-size: 18px;\"><label>${idioma.idioma}</label></div>`);\r\n              a.document.write('</div>');\r\n          }\r\n          \r\n          // Si la columna no tiene 8 conocimientos, añade espacios en blanco\r\n          const numIdiomasEnColumna = Math.min(numIdiomas - i * 8, 8);\r\n          for (let k = numIdiomasEnColumna; k < 8; k++) {\r\n              a.document.write('<div style=\"height: 22px;\"></div>'); // Espacio en blanco para completar 8 elementos\r\n          }\r\n          \r\n          // Cierra la columna actual\r\n          a.document.write('</div>');\r\n      }\r\n\r\n      a.document.write('</div>');\r\n\r\n      if (comentarios != \"\") {\r\n        // =========== 9. COMENTARIOS ============\r\n        a.document.write(\r\n          '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n        );\r\n        a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n        a.document.write(\r\n          '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">'+languageTexts.comentariotTitulo+'</label>'\r\n        );\r\n        a.document.write(\"</div>\");\r\n        a.document.write(\"</div>\");\r\n      \r\n        // =========== Nota ============\r\n        a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n        a.document.write('<div style=\" flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + languageTexts.comentarios + ': ' + comentarios + '</label></div>');\r\n        a.document.write(\"</div>\");\r\n      }\r\n   \r\n    a.document.write(\"</body></html>\");\r\n\r\n    \r\n    a.document.close();\r\n    setTimeout(function () {\r\n      a.print();\r\n    }, 1000);\r\n  }\r\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class FormularioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"formulario-container\">\n    <app-personal></app-personal>\n</div>\n<div class=\"formulario-container\">\n    <app-skills></app-skills>\n</div>\n<div class=\"formulario-container\">\n    <app-conocimiento-total></app-conocimiento-total>\n</div>\n<div class=\"formulario-container\">\n    <app-estudios></app-estudios>\n</div>\n<div class=\"formulario-container\">\n    <app-experiencia></app-experiencia>\n</div>\n<div class=\"formulario-container\">\n    <app-cursos></app-cursos>\n</div>\n<div class=\"formulario-container\">\n    <app-idiomas></app-idiomas>\n</div>\n<div class=\"formulario-container\">\n    <app-comentarios></app-comentarios>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\nimport { IdiomasElement } from '../models/idiomas.interface';\n\n@Component({\n  selector: 'app-idiomas',\n  templateUrl: './idiomas.component.html',\n  styleUrls: ['./idiomas.component.scss']\n})\nexport class IdiomasComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<IdiomasElement>([]);\n  idioma: string = '';\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n\n  displayedColumns = ['idioma', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n   }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarIdioma(): void {\n    if (this.idioma) {\n      const nuevaExperiencia: IdiomasElement = {\n        idioma: this.idioma\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      console.log('dataSource.data después de agregar:', this.dataSource.data);\n      this.dataFormularioService.guardarIdioma(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.idioma = '';\n  }\n\n  eliminarElemento(elemento: IdiomasElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarIdioma(this.dataSource.data);\n  }\n}\n","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">IDIOMAS / LANGUAGES</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.selectidioma }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.idioma }}\" name=\"idioma\" required [(ngModel)]=\"idioma\">\n            <mat-error *ngIf=\"!idioma\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n        \n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarIdioma()\">{{ languageTexts.guardarIdioma }}</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"idioma\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.idioma }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.idioma }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef>  {{ languageTexts.eliminar }}  </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-navigation></app-navigation>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { FormularioComponent } from './formulario/formulario.component';\nimport { PersonalComponent } from './personal/personal.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { ExperienciaComponent } from './experiencia/experiencia.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule } from '@angular/forms';\nimport { EstudiosComponent } from './estudios/estudios.component';\nimport { ConocimientosComponent } from './conocimientos/conocimientos.component';\nimport { CursosComponent } from './cursos/cursos.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSelectModule } from '@angular/material/select';\nimport { IdiomasComponent } from './idiomas/idiomas.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ComentariosComponent } from './comentarios/comentarios.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SkillsComponent } from './skills/skills.component';\nimport { ConocimientoTotalComponent } from './conocimiento-total/conocimiento-total.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    FormularioComponent,\n    PersonalComponent,\n    ExperienciaComponent,\n    EstudiosComponent,\n    ConocimientosComponent,\n    CursosComponent,\n    IdiomasComponent,\n    ComentariosComponent,\n    SkillsComponent,\n    ConocimientoTotalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FormsModule,\n    HttpClientModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatCheckboxModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\nimport { SkillsElement } from '../models/skills.interface';\nimport {SelectionModel} from '@angular/cdk/collections';\n\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.scss']\n})\nexport class SkillsComponent implements OnInit {\n\n  \n  selection = new SelectionModel<SkillsElement>(true, []);\n  dataSource = new MatTableDataSource<SkillsElement>([\n    // Agrega más elementos si es necesario\n  ]);\n  skill: string = '';\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n\n  displayedColumns = ['select','skill', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n   }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarSkill(): void {\n    if (this.skill) {\n      const nuevaExperiencia: SkillsElement = {\n        skill: this.skill,\n        position: (this.dataSource.data.length + 1)\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n      \n      this.selection.select(nuevaExperiencia);\n\n      //this.dataFormularioService.guardarConocimientos(this.dataSource.data);\n      this.dataFormularioService.guardarSkills(this.selection.selected);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.skill = '';\n  }\n\n  eliminarElemento(elemento: SkillsElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.selection.deselect(elemento); // Deselecciona el elemento eliminado\n    this.dataFormularioService.guardarSkills(this.dataSource.data);\n  }\n\n   // Para select en tabla\n   isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    this.dataFormularioService.guardarSkills(this.selection.selected);\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n    this.dataFormularioService.guardarSkills(this.selection.selected);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: SkillsElement): string {\n    console.log(\"this.selection\",this.selection.selected);\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n}\n","<div class=\"formulario-container\">\r\n    <h2 class=\"titulo\">HABILIDADES BLANDAS / SOFT SKILLS</h2>\r\n    <form class=\"formulario\">\r\n      <div class=\"fila\">\r\n        <h3 class=\"titulo\">{{ languageTexts.indicaSkill }}</h3>\r\n      </div>\r\n\r\n      <div class=\"fila\">\r\n        <div class=\"columna\">\r\n          <mat-form-field class=\"campo\">\r\n            <mat-label>{{ languageTexts.skill }}</mat-label>\r\n            <input matInput placeholder=\"{{ languageTexts.skill }}\" name=\"skill\" required [(ngModel)]=\"skill\">\r\n            <mat-error *ngIf=\"!skill\">{{ languageTexts.obligatorio }}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n      </div>\r\n  \r\n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarSkill()\">{{ languageTexts.guardarSkill }}</button>\r\n    </form>\r\n  \r\n    <div class=\"example-container mat-elevation-z8\">\r\n        <table mat-table [dataSource]=\"dataSource\">\r\n\r\n          <ng-container matColumnDef=\"select\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                            [aria-label]=\"checkboxLabel()\">\r\n              </mat-checkbox>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n              <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                            (change)=\"$event ? selection.toggle(row) : null\"\r\n                            [checked]=\"selection.isSelected(row)\"\r\n                            [aria-label]=\"checkboxLabel(row)\">\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n      \r\n          <!-- Definición de las columnas -->\r\n          <ng-container matColumnDef=\"skill\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.skill }} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element.skill }} </td>\r\n          </ng-container>\r\n      \r\n          <!-- Columna para el botón de eliminar -->\r\n          <ng-container matColumnDef=\"eliminar\">\r\n            <th mat-header-cell *matHeaderCellDef>  {{ languageTexts.eliminar }}  </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n      \r\n          <!-- Definir el orden de las columnas -->\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n      </div>    \r\n</div>\r\n  ","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LanguageService } from '../language.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  \n  languages = [\n    { value: 'en', viewValue: 'English' },\n    { value: 'es', viewValue: 'Español' }\n    // Agrega más idiomas si es necesario\n  ];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private languageService: LanguageService) {\n    this.selectedLanguage = 'es'; // Establece el idioma predeterminado\n    this.updateLanguageTexts();\n  }\n\n  updateLanguageTexts() {\n    this.languageService.updateLanguageTexts(this.selectedLanguage);\n    this.languageTexts = this.languageService.languageTextsArray;\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['']\">{{ languageTexts.formulario }}</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <img src=\"./assets/images/logoT2.jpg\" style=\"max-width: 100px; height: auto; margin-right: 10px;\" alt=\"Logo Tesis\">\n      <span>CV</span>\n      <span class=\"spacer\"></span> <!-- Agregar un espacio entre \"CV\" y el selector de idioma -->\n      <mat-form-field class=\"small-select\">\n        <mat-label>{{ languageTexts.selectLanguage }}</mat-label>\n        <mat-select [(value)]=\"selectedLanguage\" (selectionChange)=\"updateLanguageTexts()\" class=\"custom-select\">\n          <mat-option *ngFor=\"let language of languages\" [value]=\"language.value\">\n            {{ language.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>      \n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\n// @ts-ignore\nimport * as Print from '../assets/js/print.js';\n// @ts-ignore\nimport * as Print2 from '../assets/js/print2.js';\nimport { EstudioElement } from './models/estudios.interface';\nimport { PeriodicElement } from './models/experiencias.interface';\nimport { ConocimientoElement } from './models/conocimientos.interface';\nimport { SkillsElement } from './models/skills.interface';\nimport { IdiomasElement } from './models/idiomas.interface';\nimport { CursoElement } from './models/cursos.interface';\nimport { LanguageService } from './language.service';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFormularioService {\n  private readonly datosKey = 'datosFormulario';\n\n  nombre: string = '';\n  comentarios: string = '';\n  apellidos: string = '';\n  nacionalidad: string = '';\n  edad: number = 18;\n  ciudad: string = '';\n  pais: string = '';\n  estudios: EstudioElement[] = [];\n  conocimientos: ConocimientoElement[] = [];\n  skills: SkillsElement[] = [];\n  experiencias: PeriodicElement[] = [];\n  cursos: CursoElement[] = [];\n  idiomas: IdiomasElement[] = [];\n\n  // Variables para indicar si los arreglos tienen elementos\n  tieneEstudios: boolean = false;\n  tieneConocimientos: boolean = false;\n  tieneExperiencias: boolean = false;\n  tieneCursos: boolean = false;\n  tieneIdiomas: boolean = false;\n  tienePersonal: boolean = false;\n  tieneSkills: boolean = false;\n\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n\n  constructor(private languageService: LanguageService) { \n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n\n    const datosGuardados = localStorage.getItem(this.datosKey);\n    if (datosGuardados) {\n      const datos = JSON.parse(datosGuardados);\n      // Asignar los datos recuperados a las propiedades del servicio\n      this.nombre = datos.nombre;\n      this.apellidos = datos.apellidos;\n      this.nacionalidad = datos.nacionalidad;\n      this.edad = datos.edad;\n      this.ciudad = datos.ciudad;\n      this.pais = datos.pais;\n      this.estudios = datos.estudios;\n      this.conocimientos = datos.conocimientos;\n      this.experiencias = datos.experiencias;\n      this.cursos = datos.cursos;\n      this.idiomas = datos.idiomas;\n      this.tieneEstudios = datos.tieneEstudios;\n      this.tieneConocimientos = datos.tieneConocimientos;\n      this.tieneExperiencias = datos.tieneExperiencias;\n      this.tieneCursos = datos.tieneCursos;\n      this.tieneIdiomas = datos.tieneIdiomas;\n      this.tienePersonal = datos.tienePersonal;\n    }\n  }\n\n  guardarDatos(comentarios: string, estilo: string) {\n    this.comentarios = comentarios;\n    this.actualizarEstadoArreglos();\n    if(estilo === \"Diseño de una columna\"){\n      Print.printDiv2(this.nombre, this.apellidos, this.nacionalidad, this.edad, this.ciudad, this.pais, this.estudios, this.conocimientos,\n        this.experiencias, this.cursos, this.idiomas, this.languageTexts, this.comentarios, this.skills);\n    } else {\n      Print2.printDiv2(this.nombre, this.apellidos, this.nacionalidad, this.edad, this.ciudad, this.pais, this.estudios, this.conocimientos,\n        this.experiencias, this.cursos, this.idiomas, this.languageTexts);\n    }\n\n  }\n\n  guardarPersonal(nombre: string, apellidos: string, nacionalidad: string, edad: number, ciudad: string, pais: string) {\n    this.nombre = nombre;\n    this.apellidos = apellidos;\n    this.nacionalidad = nacionalidad;\n    this.edad = edad;\n    this.ciudad = ciudad;\n    this.pais = pais;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarEstudios(estudios: EstudioElement[]) {\n    this.estudios = estudios;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarConocimientos(conocimientos: ConocimientoElement[]) {\n    // Recorrer el arreglo recibido\n    conocimientos.forEach((conocimiento) => {\n      // Comprobar si el conocimiento no está ya en this.conocimientos\n      if (!this.conocimientos.some((elem) => elem.conocimiento === conocimiento.conocimiento)) {\n        // Si no está, agregarlo a this.conocimientos\n        this.conocimientos.push(conocimiento);\n      }\n    });\n  \n    // Actualizar el estado de los arreglos\n    this.actualizarEstadoArreglos();\n  }\n\n  eliminarConocimientos(conocimientos: ConocimientoElement[]) {\n    this.conocimientos = this.conocimientos.filter(conocimiento =>\n      !conocimientos.some(elem => elem.conocimiento === conocimiento.conocimiento)\n    );\n\n    // Actualizar el estado de los arreglos\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarSkills(skill: SkillsElement[]) {\n    this.skills = skill;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarIdioma(idiomas: IdiomasElement[]) {\n    this.idiomas = idiomas;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarExperiencias(experiencias: PeriodicElement[]) {\n    this.experiencias = experiencias;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarCursos(cursos: CursoElement[]) {\n    this.cursos = cursos;\n    this.actualizarEstadoArreglos();\n  }\n\n  private actualizarEstadoArreglos() {\n    this.tieneEstudios = this.estudios.length > 0;\n    this.tieneConocimientos = this.conocimientos.length > 0;\n    this.tieneExperiencias = this.experiencias.length > 0\n    this.tieneCursos = this.cursos.length > 0;\n    this.tieneIdiomas = this.idiomas.length > 0;\n    this.tieneSkills = this.skills.length > 0;\n\n    if(this.nombre != \"\" && this.apellidos != \"\" && this.nacionalidad != \"\" && this.ciudad != \"\" && this.pais != \"\" ) {\n      this.tienePersonal = true;\n    } else {\n      this.tienePersonal = false;\n    }\n  }\n\n}\n","<div class=\"formulario-container\">\n  <h2 class=\"titulo\">DATOS PERSONALES / PERSONAL DATA</h2>\n  <form class=\"formulario\" (focusout)=\"handleBlurEvent()\">\n    <div class=\"fila\">\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>{{ languageTexts.nombre }}</mat-label>\n          <input matInput placeholder=\"{{ languageTexts.nombre }}\" required [(ngModel)]=\"nombre\" name=\"nombre\" (input)=\"handleBlurEvent()\">\n          <mat-error *ngIf=\"!nombre\">{{ languageTexts.obligatorio }}</mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>{{ languageTexts.apellidos }}</mat-label>\n          <input matInput placeholder=\"{{ languageTexts.apellidos }}\" required [(ngModel)]=\"apellidos\" name=\"apellidos\" (input)=\"handleBlurEvent()\">\n          <mat-error *ngIf=\"!apellidos\">{{ languageTexts.obligatorio }}</mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"fila\">\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>{{ languageTexts.nacionalidad }}</mat-label>\n          <input matInput placeholder=\"{{ languageTexts.nacionalidad }}\" required [(ngModel)]=\"nacionalidad\" name=\"nacionalidad\" (input)=\"handleBlurEvent()\">\n          <mat-error *ngIf=\"!nacionalidad\">{{ languageTexts.obligatorio }}</mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>{{ languageTexts.edad }}</mat-label>\n          <input matInput placeholder=\"{{ languageTexts.edad }}\" type=\"number\" min=\"18\" required [(ngModel)]=\"edad\" name=\"edad\">\n          <mat-error *ngIf=\"!edad\">{{ languageTexts.obligatorio }}</mat-error>\n        </mat-form-field>\n      </div>          \n    </div>\n    <div class=\"fila\">\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>{{ languageTexts.ciudad }}</mat-label>\n          <input matInput placeholder=\"{{ languageTexts.ciudad }}\" required [(ngModel)]=\"ciudad\" name=\"ciudad\" (input)=\"handleBlurEvent()\">\n          <mat-error *ngIf=\"!ciudad\">{{ languageTexts.obligatorio }}</mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>{{ languageTexts.pais }}</mat-label>\n          <input matInput placeholder=\"{{ languageTexts.pais }}\" required [(ngModel)]=\"pais\" name=\"pais\" (input)=\"handleBlurEvent()\">\n          <mat-error *ngIf=\"!pais\">{{ languageTexts.obligatorio }}</mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.scss']\n})\nexport class PersonalComponent {\n  constructor(private dataFormularioService: DataFormularioService, private languageService: LanguageService) {\n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n   }\n\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n  nombre: string = '';\n  apellidos: string = '';\n  nacionalidad: string = '';\n  edad: number = 0;\n  ciudad: string = '';\n  pais: string = '';\n  plantillaHTML: string = '';\n\n  handleBlurEvent(): void {\n    console.log(\"LLEGA AQUI\")\n    this.ngOnDestroy();\n    this.dataFormularioService.guardarPersonal(this.nombre, this.apellidos, this.nacionalidad, this.edad, this.ciudad, this.pais);\n  }\n\n  ngOnDestroy() {\n   \n  }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: '', component: FormularioComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\nimport { LanguageService } from '../language.service';\nimport { Subscription } from 'rxjs';\nimport { CursoElement } from '../models/cursos.interface';\n\n@Component({\n  selector: 'app-cursos',\n  templateUrl: './cursos.component.html',\n  styleUrls: ['./cursos.component.scss']\n})\nexport class CursosComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<CursoElement>([]);\n  nombre: string = '';\n  organizacion: string = '';\n  fechaIni: Date | null = null;\n  fechaFin: Date | null = null;\n  descripcion: string = '';\n  entidad: string = '';\n  tiempoEstudio: string = '';\n  tiempoEspecifica: string = '';\n  tiempoNum: number = 1;\n  selectedLanguage: string = 'es';\n  languageTexts: any;\n  private languageSubscription: Subscription;\n  fechaActual: Date = new Date();\n\n  displayedColumns = ['nombre', 'organizacion', 'fechaIni','fechaFin','descripcion','entidad','tiempoEstudio', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService,  private languageService: LanguageService) { \n    this.selectedLanguage = this.languageService.language; // Establece el idioma predeterminado\n    this.languageSubscription = this.languageService.languageTexts$.subscribe(languageTexts => {\n      this.languageTexts = languageTexts;\n    });\n  }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarCurso(): void {\n    if (this.nombre && this.organizacion && this.fechaIni && this.fechaFin && this.descripcion && this.entidad && this.tiempoEspecifica && this.tiempoNum) {\n      const nuevaExperiencia: CursoElement = {\n        nombre: this.nombre,\n        organizacion: this.organizacion,\n        fechaIni: this.fechaIni,\n        fechaFin: this.fechaFin,\n        descripcion: this.descripcion,\n        entidad: this.entidad,\n        tiempoEstudio: this.tiempoNum + ' ' + this.tiempoEspecifica,\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      this.dataFormularioService.guardarCursos(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.nombre = '';\n    this.organizacion = '';\n    this.fechaIni = null;\n    this.fechaFin = null;\n    this.descripcion = '';\n    this.tiempoEstudio = '';\n    this.entidad = '';\n  }\n\n  eliminarElemento(elemento: CursoElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarCursos(this.dataSource.data);\n  }\n}","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">{{ languageTexts.tiposcurso }}</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.nombre }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.nombre }}\" name=\"nombre\" required [(ngModel)]=\"nombre\">\n            <mat-error *ngIf=\"!nombre\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.organizacion }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.organizacion }}\" name=\"organizacion\" required [(ngModel)]=\"organizacion\">\n            <mat-error *ngIf=\"!organizacion\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerInicio\" name=\"fechaIni\" placeholder=\"{{ languageTexts.fechaIniU }}\" [(ngModel)]=\"fechaIni\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicio></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerFin\" name=\"fechaFin\" placeholder=\"{{ languageTexts.fechaFinU }}\" [(ngModel)]=\"fechaFin\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerFin\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerFin></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <textarea matInput placeholder=\"{{ languageTexts.descripcion }}\" name=\"descripcion\" required [(ngModel)]=\"descripcion\"></textarea>\n            <mat-error *ngIf=\"!descripcion\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>{{ languageTexts.entidad }}</mat-label>\n            <input matInput placeholder=\"{{ languageTexts.entidadet }}\" name=\"entidad\" required [(ngModel)]=\"entidad\">\n            <mat-error *ngIf=\"!nombre\">{{ languageTexts.obligatorio }}</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"columna\">\n            <mat-form-field style=\"margin-right: 10px;\">\n                <mat-select placeholder=\"{{ languageTexts.tiempodeEst }}\" name=\"tiempoEspecifica\" [(ngModel)]=\"tiempoEspecifica\">\n                    <mat-option value=\"horas\">{{ languageTexts.horas }}</mat-option>\n                    <mat-option value=\"dias\">{{ languageTexts.dias }}</mat-option>\n                    <mat-option value=\"meses\">{{ languageTexts.meses }}</mat-option>\n                    <mat-option value=\"años\">{{ languageTexts.year }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field style=\"margin-right: 10px;\">\n              <input matInput placeholder=\"{{ languageTexts.cantidad }}\" type=\"number\" min=\"1\" required [(ngModel)]=\"tiempoNum\" name=\"tiempoNum\">\n              <mat-error *ngIf=\"!tiempoNum\">{{ languageTexts.obligatorio }}</mat-error>\n            </mat-form-field>\n        </div>\n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarCurso()\">{{ languageTexts.guardarOtro }}</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"nombre\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.nombre }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.nombre }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"organizacion\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.organizacion }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.organizacion }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaIni\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\"> {{ languageTexts.fechaInicio }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 100px;\"> {{ element.fechaIni | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaFin\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\"> {{ languageTexts.fechaFin }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 100px;\"> {{ element.fechaFin | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"descripcion\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.descripcion }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.descripcion }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"entidad\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.entidadet }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.entidad }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"tiempoEstudio\">\n            <th mat-header-cell *matHeaderCellDef> {{ languageTexts.tiempodeEst }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.tiempoEstudio }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 40px;\"> {{ languageTexts.eliminar }} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 40px;\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface LanguageText {\n  selectLanguage: string;\n  menu: string;\n  nombre: string;\n  apellidos: string;\n  nacionalidad: string;\n  edad: string;\n  ciudad: string;\n  pais: string;\n  obligatorio: string;\n  actual: string;\n  universidad: string;\n  carrera: string;\n  fechaIniU: string;\n  fechaFinU: string;\n  fechaActual: string;\n  puesto: string;\n  empresa: string;\n  actividades: string;\n  conocimiento: string;\n  logros: string;\n  funciones: string;\n  formulario: string;\n  generarDoc: string;\n  guardarCono: string;\n  guardarEstu: string;\n  guardarExp: string;\n  guardarOtro: string;\n  guardarIdioma: string;\n  eliminar: string;\n  fechaInicio: string;\n  fechaFin: string;\n  organizacion: string;\n  tiempodeEst: string;\n  selectidioma: string;\n  idioma: string;\n  logroet: string;\n  funcionet: string;\n  descripcion: string;\n  entidad: string;\n  entidadet: string;\n  cantidad: string;\n  horas: string;\n  meses: string;\n  dias: string;\n  year: string;\n  apellidonombre: string;\n  datospersonales: string;\n  estudioscursados: string;\n  generacion: string;\n  actualidad: string;\n  conocimientotec: string;\n  experiencialab: string;\n  fecha: string;\n  otrosEstudios: string;\n  comentarios: string;\n  tiposcurso: string;\n  estilos: string;\n  estilo1: string;\n  estilo2: string;\n  idiomas: string;\n  comentariotTitulo: string;\n  indicaConocimiento: string;\n  residenciaactual: string;\n  indicaSkill: string;\n  skill: string;\n  guardarSkill: string;\n  skillEt: string;\n  lenguajeProgramacion: string;\n  conocimiento5: string;\n  conocimiento6: string;\n  conocimiento7: string;\n  // Agrega más claves y valores según sea necesario para otros elementos de la interfaz de usuario\n}\n\n\ninterface LanguageTexts {\n  [key: string]: LanguageText;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  language: string  = '';\n  languageTextsArray: any;\n  private languageTexts: LanguageTexts = {\n    en: {\n      selectLanguage: 'Select language',\n      menu: 'Menu',\n      nombre: 'Name',\n      apellidos: 'Last names',\n      nacionalidad: 'Nationality',\n      edad: 'Age',\n      ciudad: 'Current city of residence',\n      pais: 'Current country of residence',\n      obligatorio: 'This field is required',\n      actual: 'Current',\n      universidad: 'University',\n      carrera: 'Degree',\n      fechaIniU: 'Select start date',\n      fechaFinU: 'Select end date',\n      fechaActual: 'Select date',\n      puesto: 'Position',\n      empresa: 'Enterprise',\n      actividades: 'Activities',\n      conocimiento: 'Knowledge',\n      logros: 'List three (3) major accomplishments',\n      funciones: 'Indicate three (3) main functions',\n      formulario: 'Form',\n      generarDoc: 'Generate Document',\n      guardarCono: 'Save Knowledge',\n      guardarEstu: 'Save University',\n      guardarExp: 'Save Work Experience',\n      guardarOtro: 'Save another study',\n      guardarIdioma: 'Save Language',\n      eliminar: 'Delete',\n      fechaInicio: 'Start date',\n      fechaFin: 'End date',\n      organizacion: 'Organization',\n      tiempodeEst: 'Study Time',\n      selectidioma: 'Enter the Language',\n      idioma: 'Language',\n      logroet: 'Accomplishments',\n      funcionet: 'Functions',\n      descripcion: 'Description',\n      entidad: 'Enter entity where course',\n      entidadet: 'Entity',\n      cantidad: 'Amount of time',\n      horas: 'Hours',\n      meses: 'Months',\n      dias: 'Days',\n      year: 'Years',\n      apellidonombre: 'Surname and first name',\n      datospersonales: 'PERSONAL DATA',\n      estudioscursados: 'STUDIES COMPLETED',\n      generacion: 'Generation',\n      actualidad: 'Currently',\n      conocimientotec: 'TECHNICIAL KNOWHOW',\n      experiencialab: 'WORK EXPERIENCE',\n      fecha: 'Date',\n      otrosEstudios: 'OTHER STUDIES',\n      comentarios: 'Comments',\n      tiposcurso: 'COURSES, DIPLOMA, MASTERS, DOCTORATE, CERTIFICATION',\n      estilos: 'Document Design',\n      estilo1: 'A column',\n      estilo2: 'Two columns',\n      idiomas: 'LANGUAGES',\n      comentariotTitulo: 'NOTES OR COMMENTS',\n      indicaConocimiento: 'Select the knowledge in the table (In the box) or enter a new knowledge (Type in the field)',\n      residenciaactual: 'Current residence',\n      indicaSkill: 'Select the skill in the table (In the box) or enter a new skill (Type in the field)',\n      skill: 'Soft skill',\n      guardarSkill: 'Save Soft Skill',\n      skillEt: 'SOFT SKILLS',\n      lenguajeProgramacion: 'Language of programming',\n      conocimiento5: 'Vision Systems',\n      conocimiento6: 'Drives / Protections',\n      conocimiento7: 'Reading and Designing Electrical Drawings',\n      // Agrega más claves y valores según sea necesario para otros elementos de la interfaz de usuario en inglés\n    },\n    es: {\n      selectLanguage: 'Seleccionar idioma',\n      menu: 'Menú',\n      nombre: 'Nombre',\n      apellidos: 'Apellidos',\n      nacionalidad: 'Nacionalidad',\n      edad: 'Edad',\n      ciudad: 'Ciudad de residencia actual',\n      pais: 'País de residencia actual',\n      obligatorio: 'El campo es obligatorio',\n      actual: 'Actual',\n      universidad: 'Universidad',\n      carrera: 'Carrera',\n      fechaIniU: 'Seleccione fecha de inicio',\n      fechaFinU: 'Seleccione fecha de fin',\n      fechaActual: 'Seleccione fecha',\n      puesto: 'Puesto',\n      empresa: 'Empresa',\n      actividades: 'Actividades',\n      conocimiento: 'Conocimiento',\n      logros: 'Indique tres (3) principales logros',\n      funciones: 'Indique tres (3) principales funciones',\n      formulario: 'Formulario',\n      generarDoc: 'Generar documento',\n      guardarCono: 'Guardar Conocimiento',\n      guardarEstu: 'Guardar Estudio',\n      guardarExp: 'Guardar Experiencia Laboral',\n      guardarOtro: 'Guardar otro estudio',\n      guardarIdioma: 'Guardar idioma',\n      eliminar: 'Eliminar',\n      fechaInicio: 'Fecha de inicio',\n      fechaFin: 'Fecha de fin',\n      organizacion: 'Organización',\n      tiempodeEst: 'Tiempo de estudios',\n      selectidioma: 'Ingrese el idioma',\n      idioma: 'Idioma',\n      logroet: 'Logros',\n      funcionet: 'Funciones',\n      descripcion: 'Descripción',\n      entidad: 'Ingrese entidad en donde curso',\n      entidadet: 'Entidad',\n      cantidad: 'Cantidad de tiempo (Aproximado)',\n      horas: 'Horas',\n      meses: 'Meses',\n      dias: 'Días',\n      year: 'Años',\n      apellidonombre: 'Apellido y nombre',\n      datospersonales: 'DATOS PERSONALES',\n      estudioscursados: 'ESTUDIOS CURSADOS',\n      generacion: 'Generación',\n      actualidad: 'Actualmente',\n      conocimientotec: 'CONOCIMIENTO TECNICO',\n      experiencialab: 'EXPERIENCIA LABORAL',\n      fecha: 'Fecha',\n      otrosEstudios: 'OTROS ESTUDIOS',\n      comentarios: 'Comentarios',\n      tiposcurso: 'CURSOS, DIPLOMADO, MAESTRIA, DOCTORADO, CERTIFICACIÓN',\n      estilos: 'Diseño del documento',\n      estilo1: 'Una columna',\n      estilo2: 'Dos columnas',\n      idiomas: 'IDIOMAS',\n      comentariotTitulo: 'NOTAS O COMENTARIOS',\n      indicaConocimiento: 'Seleccione el conocimiento en la tabla (En la casilla) o ingrese un nuevo conocimiento (Escriba en el campo)',\n      residenciaactual: 'Residencia actual',\n      indicaSkill: 'Seleccione la habilidad en la tabla (En la casilla) o ingrese una nueva habilidad (Escriba en el campo)',\n      skill: 'Habilidad blanda',\n      guardarSkill: 'Guardar habilidad blanda',\n      skillEt: 'HABILIDADES BLANDAS',\n      lenguajeProgramacion: 'Lenguaje de programación',\n      conocimiento5: 'Sistemas de vision',\n      conocimiento6: 'Accionamientos / Protecciones',\n      conocimiento7: 'Lectura y diseños de Planos Electricos',\n      // Agrega más claves y valores según sea necesario para otros elementos de la interfaz de usuario en español\n    }\n    // Agrega más idiomas según sea necesario\n  };\n\n  private _languageTextsSubject = new BehaviorSubject<LanguageText>(this.languageTexts.es);\n\n  languageTexts$ = this._languageTextsSubject.asObservable();\n\n  constructor() {}\n\n  getLanguageTexts(language: string): LanguageText {\n    this.language = language;\n    return this.languageTexts[language] || this.languageTexts['en']; // Fallback al inglés si no se encuentra el idioma\n  }\n\n  updateLanguageTexts(language: string) {\n    this.languageTextsArray = this.getLanguageTexts(language);\n    this._languageTextsSubject.next(this.languageTextsArray);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}